{{- if false }}

{{- $ref := dict "root" . "name" "post-install-keycloak" "component" "sso" -}}
{{- if .Values.keycloak.postInstall.enabled -}}
kind: Job
apiVersion: batch/v1
metadata:
  name: post-install-keycloak
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
  labels:
    {{- include "drogue-cloud-core.labels" $ref | nindent 4 }}
spec:
  backoffLimit: 1000
  completions: 1
  parallelism: 1
  ttlSecondsAfterFinished: 600
  template:
    spec:
      restartPolicy: OnFailure

      {{- if .Values.keycloak.useServiceCA }}
      volumes:
        - name: service-ca
          configMap:
            name: keycloak-service-ca
      {{- end }}

      containers:
        - name: post-install
          image: {{ .Values.keycloak.postInstall.image }}
          imagePullPolicy: IfNotPresent

          env:
            - name: ADMIN_USERNAME
              valueFrom:
                secretKeyRef:
                  name: credential-sso
                  key: ADMIN_USERNAME
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: credential-sso
                  key: ADMIN_PASSWORD

            - name: KEYCLOAK_URL
              value: {{ include "drogue-cloud-common.keycloak.url" . | quote }}

            - name: KCADM_PATH
              value: {{ .Values.keycloak.postInstall.kcAdmPath | default "/opt/jboss/keycloak/bin/kcadm.sh" }}

            {{- if .Values.keycloak.useServiceCA }}
            - name: CUSTOM_TRUSTSTORE
              value: "/etc/certs/keycloak/service-ca.crt"
            {{- end }}

          {{- if .Values.keycloak.useServiceCA }}
          volumeMounts:
            - mountPath: /etc/certs/keycloak
              name: service-ca
          {{- end }}

          command:
            - bash
            - -exc
            - |
              # set up trust store
              if [ -n "${CUSTOM_TRUSTSTORE}" ]; then
                keytool -importcert -noprompt -trustcacerts -file "${CUSTOM_TRUSTSTORE}" -keystore /tmp/truststore.jks -storepass temp1234 -storetype JKS
                $KCADM_PATH config truststore --config /tmp/kcadm.config /tmp/truststore.jks --trustpass temp1234
              fi

              # log in to keycloak
              $KCADM_PATH config credentials config --config /tmp/kcadm.config --server "$KEYCLOAK_URL" --realm master --user "$ADMIN_USERNAME" --password "$ADMIN_PASSWORD"

              # add drogue-user to default roles

              # get realm
              $KCADM_PATH get --config /tmp/kcadm.config realms/drogue
              # get composite default role
              $KCADM_PATH get --config /tmp/kcadm.config -r drogue roles/default-roles-drogue
              # list default roles
              $KCADM_PATH get-roles --config /tmp/kcadm.config -r drogue --rname default-roles-drogue
              # add drogue-user to default roles
              $KCADM_PATH add-roles --config /tmp/kcadm.config -r drogue --rname default-roles-drogue --rolename drogue-user
              # list again
              $KCADM_PATH get-roles --config /tmp/kcadm.config -r drogue --rname default-roles-drogue

              # add drogue-admin to service account roles

              # get all client (we don't know the ID)
              $KCADM_PATH get --config /tmp/kcadm.config -r drogue clients
              # get client roles
              $KCADM_PATH get-roles --config /tmp/kcadm.config -r drogue --uusername service-account-services
              # add drogue-admin to service account roles
              $KCADM_PATH add-roles --config /tmp/kcadm.config -r drogue --uusername service-account-services --rolename drogue-admin
              # list again
              $KCADM_PATH get-roles --config /tmp/kcadm.config -r drogue --uusername service-account-services
{{- end -}}

{{- end }}