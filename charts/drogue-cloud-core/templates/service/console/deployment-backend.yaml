{{- $ref := dict "root" . "name" "console-backend" "component" "console" -}}
kind: Deployment
apiVersion: apps/v1
metadata:
  name: console-backend
  labels:
    {{- include "drogue-cloud-core.labels" $ref | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "drogue-cloud-common.selectorLabels" $ref | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "drogue-cloud-core.labels" $ref | nindent 8 }}
    spec:
      serviceAccountName: console-backend
      initContainers:
        {{- include "drogue-cloud-core.init-container.wait-for-client-secret" ( dict "root" . "volume" "client-secret-services")  | nindent 8 }}
      containers:
        - name: endpoint
          image: {{ include "drogue-cloud-core.image" $ref | quote }}
          imagePullPolicy: {{ include "drogue-cloud-core.image-pull-policy" . }}
          env:
            - name: RUST_LOG
              value: debug
            - name: BIND_ADDR
              value: "0.0.0.0:8080"
            - name: HEALTH__BIND_ADDR
              value: "0.0.0.0:9090"
            - name: ENABLE_AUTH
              value: "true"
            - name: KAFKA__BOOTSTRAP_SERVERS
              value: {{ include "drogue-cloud-common.kafka-bootstrap-server" . }}
            {{- include "drogue-cloud-common.kafka-properties" (dict "root" . "prefix" "KAFKA__PROPERTIES__" ) | nindent 12 }}
            - name: UI__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-drogue
                  key: CLIENT_ID
            - name: UI__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-drogue
                  key: CLIENT_SECRET
            - name: OAUTH__DROGUE__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-drogue
                  key: CLIENT_ID
            - name: OAUTH__DROGUE__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-drogue
                  key: CLIENT_SECRET
            - name: OAUTH__SERVICES__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_ID
            - name: OAUTH__SERVICES__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_SECRET
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: USER_AUTH__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_ID
            - name: USER_AUTH__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_SECRET
            - name: REGISTRY__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_ID
            - name: REGISTRY__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_SECRET
                  optional: true
            - name: KEYCLOAK__URL
              value: https://keycloak.$(NAMESPACE).svc.cluster.local.:8443
            - name: KEYCLOAK__ADMIN_USERNAME
              valueFrom:
                secretKeyRef:
                  key: ADMIN_USERNAME
                  name: credential-sso
            - name: KEYCLOAK__ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: ADMIN_PASSWORD
                  name: credential-sso
            {{ if ne .Values.global.cluster "openshift" }}
            - name: ENDPOINTS__LOCAL_CERTS
              value: "true"
            - name: "KEYCLOAK__TLS_NOVERIFY"
              value: "true"
            {{- end }}
            - name: SSO_URL
              value: {{ include "drogue-cloud-common.ingress.url" (dict "root" . "prefix" "sso" "ingress" .Values.services.sso.ingress ) }}
            - name: ENDPOINTS__API_URL
              value: {{ .Values.console.overrides.api.url | default ( include "drogue-cloud-common.ingress.url" (dict "root" . "prefix" "api" "ingress" .Values.services.api.ingress ) ) }}
            - name: ENDPOINTS__CONSOLE_URL
              value: {{ .Values.console.overrides.console.url | default ( include "drogue-cloud-common.ingress.url" (dict "root" . "prefix" "console" "ingress" .Values.services.console.ingress ) ) }}
            - name: ENDPOINTS__REDIRECT_URL
              value: {{ .Values.console.overrides.console.url | default ( include "drogue-cloud-common.ingress.url" (dict "root" . "prefix" "console" "ingress" .Values.services.console.ingress ) ) }}
            - name: ENDPOINTS__DEVICE_REGISTRY_URL
              value: {{ .Values.console.overrides.api.url | default ( include "drogue-cloud-common.ingress.url" (dict "root" . "prefix" "api" "ingress" .Values.services.api.ingress ) ) }}
            - name: ENDPOINTS__COMMAND_ENDPOINT_URL
              value: {{ .Values.console.overrides.api.url | default ( include "drogue-cloud-common.ingress.url" (dict "root" . "prefix" "api" "ingress" .Values.services.api.ingress ) ) }}
            - name: ENDPOINTS__COAP_ENDPOINT_URL
              value: {{ .Values.console.overrides.coapEndpoint.url | default ( include "drogue-cloud-common.ingress.coap-url" (dict "root" . "prefix" "coap-endpoint" "ingress" .Values.endpoints.coap.ingress "insecure" .Values.endpoints.coap.insecure ) ) }}
            - name: ENDPOINTS__HTTP_ENDPOINT_URL
              value: {{ .Values.console.overrides.httpEndpoint.url | default ( include "drogue-cloud-common.ingress.url" (dict "root" . "prefix" "http-endpoint" "ingress" .Values.endpoints.http.ingress "insecure" .Values.endpoints.http.insecure ) ) }}
            - name: ENDPOINTS__MQTT_ENDPOINT_HOST
              value: {{ .Values.console.overrides.mqttEndpoint.host | default ( include "drogue-cloud-common.ingress.host" (dict "root" . "prefix" "mqtt-endpoint" "ingress" .Values.endpoints.mqtt.ingress ) ) }}
            - name: ENDPOINTS__MQTT_ENDPOINT_PORT
              value: {{ .Values.console.overrides.mqttEndpoint.port | default .Values.endpoints.mqtt.ingress.port | quote }}
            - name: ENDPOINTS__MQTT_INTEGRATION_HOST
              value: {{ .Values.console.overrides.mqttIntegration.host | default ( include "drogue-cloud-common.ingress.host" (dict "root" . "prefix" "mqtt-integration" "ingress" .Values.integrations.mqtt.ingress ) ) }}
            - name: ENDPOINTS__MQTT_INTEGRATION_PORT
              value: {{ .Values.console.overrides.mqttIntegration.port | default .Values.integrations.mqtt.ingress.port | quote }}
            - name: ENDPOINTS__WEBSOCKET_INTEGRATION_URL
              value: {{ .Values.console.overrides.wsIntegration.url | default ( include "drogue-cloud-common.ingress.ws-url" (dict "root" . "prefix" "websocket-integration" "ingress" .Values.integrations.websocket.ingress "insecure" .Values.integrations.websocket.insecure ) ) }}
            - name: ENDPOINTS__KAFKA_BOOTSTRAP_SERVERS
              value: {{ .Values.console.overrides.kafka.servers | default ( include "drogue-cloud-common.kafka-bootstrap-server" . ) }}
          ports:
            - containerPort: 8080
              name: endpoint
              protocol: TCP
          resources:
            limits:
              memory: 64Mi
          readinessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /readiness
          livenessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /liveness
      volumes:
        - name: client-secret-drogue
          secret:
            secretName: keycloak-client-secret-drogue
        - name: client-secret-services
          secret:
            secretName: keycloak-client-secret-services