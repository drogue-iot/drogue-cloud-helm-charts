{{- $ref := dict "root" . "name" "device-management-service" "component" "device-registry" -}}
kind: Deployment
apiVersion: apps/v1
metadata:
  name: device-management-service
  labels:
    {{- include "drogue-cloud-core.labels" $ref | nindent 4 }}
  annotations:
    app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"postgres"}]'
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "drogue-cloud-common.selectorLabels" $ref | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "drogue-cloud-core.labels" $ref | nindent 8 }}
    spec:
      initContainers:
        - name: wait-for-client-secret-drogue
          image: registry.access.redhat.com/ubi8-minimal
          imagePullPolicy: IfNotPresent
          command:
            - bash
            - -c
            - |
              echo "Waiting for client secret to be populated (/etc/client-secret/CLIENT_SECRET)..."
              while test -z "$(cat /etc/client-secret/CLIENT_SECRET)"; do
                sleep 1
              done
          volumeMounts:
            - mountPath: /etc/client-secret
              name: client-secret-drogue
              readOnly: true
        - name: wait-for-client-secret-services
          image: registry.access.redhat.com/ubi8-minimal
          imagePullPolicy: IfNotPresent
          command:
            - bash
            - -c
            - |
              echo "Waiting for client secret to be populated (/etc/client-secret/CLIENT_SECRET)..."
              while test -z "$(cat /etc/client-secret/CLIENT_SECRET)"; do
                sleep 1
              done
          volumeMounts:
            - mountPath: /etc/client-secret
              name: client-secret-services
              readOnly: true
      containers:
        - name: service
          image: {{ include "drogue-cloud-core.image-repo" . }}device-management-service:{{ include "drogue-cloud-core.image-tag" . }}
          imagePullPolicy: {{ include "drogue-cloud-core.image-pull-policy" . }}
          env:
            - name: RUST_LOG
              value: debug
            - name: RUST_BACKTRACE
              value: "1"
            - name: BIND_ADDR
              value: 0.0.0.0:8080
            - name: HEALTH__BIND_ADDR
              value: "0.0.0.0:9090"
            - name: PG__HOST
              value: postgres
            - name: PG__DBNAME
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: databaseName
            - name: PG__USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: admin.username
            - name: PG__PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: admin.password
            - name: OAUTH__DROGUE__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-drogue
                  key: CLIENT_ID
            - name: OAUTH__DROGUE__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-drogue
                  key: CLIENT_SECRET
            - name: OAUTH__SERVICES__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_ID
            - name: OAUTH__SERVICES__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_SECRET
            - name: INSTANCE
              valueFrom:
                configMapKeyRef:
                  name: configuration
                  key: instance
            - name: SSO_URL
              value: {{ include "drogue-cloud-common.sso.url" . }}
            - name: KAFKA_EVENTS__TOPIC
              value: registry
          readinessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /readiness
          livenessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /liveness
          ports:
            - containerPort: 8080
              name: api
              protocol: TCP
          resources:
            limits:
              memory: 128Mi
      volumes:
        - name: client-secret-drogue
          secret:
            secretName: keycloak-client-secret-drogue
        - name: client-secret-services
          secret:
            secretName: keycloak-client-secret-services