{
  "$schema": "https://json-schema.org/draft-07/schema#",
  "required": [
    "defaults"
  ],
  "properties": {
    "global": {
      "type": "object",
      "required": [
        "domain",
        "cluster",
        "instance"
      ],
      "properties": {
        "cluster": {
          "type": "string",
          "enum": [
            "kubernetes",
            "openshift",
            "kind",
            "minikube"
          ]
        },
        "domain": {
          "type": "string",
          "description": "The base DNS domain"
        },
        "instance": {
          "type": "string",
          "description": "The instance ID",
          "default": "drogue"
        },
        "partOf": {
          "type": "string"
        }
      }
    },
    "console": {
      "type": "object",
      "properties": {
        "overrides": {
          "type": "object",
          "properties": {
            "kafka": {
              "type": "object",
              "properties": {
                "servers": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "endpoints": {
      "type": "object",
      "properties": {
        "coap": {
          "type": "object",
          "required": [
            "ingress"
          ],
          "properties": {
            "insecure": {
              "type": "boolean",
              "default": true
            },
            "ingress": {
              "type": "object",
              "properties": {
                "host": {
                  "type": "string",
                  "format": "hostname"
                },
                "port": {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 65536
                }
              }
            }
          }
        },
        "http": {
          "type": "object",
          "required": [
            "ingress"
          ],
          "properties": {
            "insecure": {
              "type": "boolean",
              "default": false
            },
            "ingress": {
              "type": "object",
              "properties": {
                "host": {
                  "type": "string",
                  "format": "hostname"
                },
                "port": {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 65536
                }
              }
            }
          }
        },
        "mqtt": {
          "type": "object",
          "required": [
            "ingress"
          ],
          "properties": {
            "ingress": {
              "type": "object",
              "properties": {
                "host": {
                  "type": "string",
                  "format": "hostname"
                },
                "port": {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 65536
                }
              }
            }
          }
        }
      }
    },
    "services": {
      "type": "object",
      "properties": {
        "registry": {
          "type": "object",
          "properties": {
            "topicOperator": {
              "oneOf": [
                {
                  "type": "object",
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "const": "strimzi"
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "type",
                    "numberOfPartitions",
                    "numberOfReplicas"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "const": "admin"
                    },
                    "numberOfPartitions": {
                      "type": "number",
                      "minimum": 1
                    },
                    "numberOfReplicas": {
                      "type": "number",
                      "minimum": 1
                    },
                    "properties": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "defaults": {
      "type": "object",
      "properties": {
        "images": {
          "type": "object",
          "properties": {
            "repository": {
              "type": "string"
            },
            "tag": {
              "type": "string"
            },
            "pullPolicy": {
              "type": "string",
              "enum": [
                "Always",
                "IfNotPresent",
                "Never"
              ]
            }
          }
        },
        "passthrough": {
          "type": "object"
        }
      }
    },
    "postgres": {
      "type": "object",
      "properties": {
        "podSecurityContext": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "kafka": {
      "type": "object",
      "required": [
        "external"
      ],
      "properties": {
        "external": {
          "type": "object",
          "required": [
            "enabled"
          ],
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": "false"
            },
            "bootstrapServer": {
              "type": "string"
            }
          }
        }
      }
    },
    "keycloak": {
      "type": "object",
      "properties": {
        "adminPassword": {
          "type": "string"
        },
        "postgres": {
          "type": "object",
          "required": [
            "mode"
          ],
          "properties": {
            "mode": {
              "type": "string",
              "enum": [
                "drogue",
                "operator",
                "external"
              ]
            }
          }
        }
      }
    }
  }
}